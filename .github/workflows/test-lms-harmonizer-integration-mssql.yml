# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: LMS Harmonizer - SQL Server Tests
on:
  pull_request:
    paths:
      - 'src/lms-harmonizer/**'
      # Why is there a dependency on the lms-ds-loader? Because the LMS
      # Harmonizer relies on the database tables that are controlled by the LMS
      # DS Loader.
      - 'src/lms-ds-loader/**/mssql/*.sql'
      # This folder contains copies of the SQL for the core ODS
      - 'utils/**/mssql/*.sql'
      # And this one contains the SQL for the LMSX extension
      - 'extension/**/MsSql/Structure/Ods/*.sql'
  push:
    paths:
      - 'src/lms-harmonizer/**'
      - 'src/lms-ds-loader/**/mssql/*.sql'
      - 'utils/**/mssql/*.sql'
      - 'extension/**/MsSql/Structure/Ods/*.sql'
    branches:
      - main
  workflow_dispatch:

permissions: read-all

jobs:
  integration-test-mssql-lms-harmonizer:
    name: Run SQL Server integration tests
    runs-on: ubuntu-20.04
    env:
        PACKAGE_NAME: lms-harmonizer
        SRC_DIR: src/lms-harmonizer
        LOCK_FILE: src/lms-harmonizer/poetry.lock
        SA_PASSWORD: abcdefgh1!
        MSSQL_INTEGRATED_SECURITY: False
        MSSQL_PASSWORD: abcdefgh1!
    steps:
      - name: Start Docker for SQL Server
        run: docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=${{ env.SA_PASSWORD }}' -e 'MSSQL_PID=Developer' -p 1433:1433 --name mssql -d mcr.microsoft.com/mssql/server:2017-latest

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Poetry
        run: pipx install poetry

      - name: Install Python 3.9
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: "3.9.x"
          cache: "poetry"

      - name: Install dependencies
        run: poetry env use "3.9" && poetry install
        working-directory: ${{ env.SRC_DIR }}

      - name: Add sqlcmd to PATH
        run: echo "/opt/mssql-tools/bin" >> $GITHUB_PATH

      - name: Wait for SQL Server
        run: timeout 30s bash -c 'until sqlcmd -l 30 -S localhost -U sa -P ${{ env.SA_PASSWORD}} -h-1 -V1 -Q "SET NOCOUNT ON SELECT @@servername"; do sleep 5; done'

      - name: Run CI Integration Task
        run: python ./eng/build.py ci:integration-test:mssql ${{ env.PACKAGE_NAME }}
